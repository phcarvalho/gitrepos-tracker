{"version":3,"sources":["components/RepoProvider/index.tsx","components/RepoItem/index.tsx","components/Footer/index.tsx","services/api.ts","pages/Landing/index.tsx","components/IssueItem/index.tsx","components/Pagination/index.tsx","pages/RepoPage/index.tsx","routes.tsx","App.tsx","index.tsx"],"names":["RepoContext","createContext","repos","setRepos","RepoProvider","children","useState","Provider","value","RepoItem","repo","to","pathname","full_name","className","src","owner","avatar_url","alt","login","name","stargazers_count","color","size","open_issues","social","url","Icon","FaGithubAlt","FaLinkedinIn","FaTwitter","Footer","map","item","href","key","target","api","axios","create","baseURL","Landing","repoName","setRepoName","useContext","e","a","preventDefault","find","alert","get","response","data","id","onSubmit","handleRepoSearch","type","placeholder","onChange","IssueItem","issue","repository_url","title","labels","label","style","background","Pagination","currentPage","lastPage","handlePageChange","pages","setPages","useEffect","pagesArray","minPage","maxPage","i","push","disabled","onClick","pageNumber","RepoPage","error","setError","loading","setLoading","page","setPage","setLastPage","issues","setIssues","pageRepo","setPageRepo","useParams","repoItem","then","catch","lastPageLink","headers","link","split","pop","lastPageValue","substr","indexOf","lastPageNumber","Number","substring","description","Routes","basename","path","exact","component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0f18d75a.chunk.js","sourcesContent":["import React, { useState, createContext, Dispatch, SetStateAction } from 'react';\n\ntype RepoContextType = {\n  repos: never[];\n  setRepos: Dispatch<SetStateAction<never[]>>;\n}\n\nconst initialValue: RepoContextType = {\n  repos: [],\n  setRepos: repos => {},\n}\n\nconst RepoContext = createContext(initialValue);\n\nconst RepoProvider: React.FC = ({ children }) => {\n  const [repos, setRepos] = useState([]);\n\n  return (\n    <RepoContext.Provider\n      value={{repos, setRepos}}\n    >\n      {children}\n    </RepoContext.Provider>\n  )\n}\n\nexport default RepoProvider;\n\nexport { RepoContext };","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { FaStar, FaRegStar } from 'react-icons/fa'\nimport { MdError } from 'react-icons/md'\n\nimport './styles.css'\n\nexport interface Repo {\n  id: number;\n  name: string;\n  description: string;\n  full_name: string;\n  owner: {\n    login: string;\n    avatar_url: string;\n  }\n  stargazers_count: number;\n  open_issues: number;\n}\n\nexport interface RepoItemProps {\n  repo: Repo\n}\n\nconst RepoItem: React.FC<RepoItemProps> = ({ repo }) => {\n  return (\n    <Link to={{ pathname: `/repos/${repo.full_name}` }} className=\"repo-item-link\" >\n      <article className=\"repo-item\">\n        <img src={repo.owner.avatar_url} alt={repo.full_name}/>\n        <div className=\"repo-item-content\">\n          <h1>{repo.owner.login}</h1>\n          <p>{repo.name} \n            <span>\n              { repo.stargazers_count ? (\n                <FaStar color=\"#E94F37\" size={16} />\n                ) : (\n                  <FaRegStar size={16} />\n                  )} {repo.stargazers_count}\n            </span>\n          </p>\n        </div>\n        <div className=\"repo-item-issues\">\n          <MdError size={24} />\n          <p>\n            {repo.open_issues} issues\n          </p>\n        </div>\n      </article>\n    </Link>\n  )\n}\n\nexport default RepoItem;","import React from 'react';\nimport { FaGithubAlt, FaTwitter, FaLinkedinIn } from 'react-icons/fa';\n\nimport './styles.css';\n\nconst social = [\n  {\n    name: 'GitHub',\n    url: 'https://github.com/phcarvalho',\n    Icon: FaGithubAlt\n  },\n  {\n    name: 'LinkedIn',\n    url: 'https://www.linkedin.com/in/ph-carvalho/',\n    Icon: FaLinkedinIn\n  },\n  {\n    name: 'Twitter',\n    url: 'https://twitter.com/phcarvalhodev',\n    Icon: FaTwitter\n  }\n]\n\nfunction Footer() {\n  return (\n    <div className=\"footer\">\n      <p>Made by Paulo Carvalho</p>\n      <div className=\"social-container\">\n        {social.map(item => (\n          <a href={item.url} key={item.name} target=\"blank\">\n            <item.Icon size={18} />\n          </a>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default Footer;","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://api.github.com'\n});\n\nexport default api;","import React, { useState, useContext, FormEvent } from 'react';\nimport { FaGithubAlt, FaPlus } from 'react-icons/fa'\n\nimport { RepoContext } from '../../components/RepoProvider';\nimport RepoItem, { Repo } from '../../components/RepoItem';\nimport Footer from '../../components/Footer';\n\nimport api from '../../services/api';\n\nimport './styles.css';\n\nfunction Landing() {\n  const [repoName, setRepoName] = useState('')\n  const {repos, setRepos} = useContext(RepoContext);\n\n  async function handleRepoSearch(e: FormEvent) {\n    e.preventDefault();\n    setRepoName('');\n\n    const repoAlreadyExists = repos.find(\n      (repo: Repo) => repo.full_name === repoName\n    );\n\n    if(repoAlreadyExists) {\n      alert('This repository has been added already!')\n    }\n    else {\n      const response = await api.get(`/repos/${repoName}`);\n\n      setRepos([...repos, response.data] as never[])\n    }\n\n  }\n\n  return (\n    <div id=\"page-landing\" className=\"container\">\n      <header>\n        <div className=\"page-header-title\">\n          <FaGithubAlt size={64} color=\"#393E41\" />\n          <h1>\n            GitRepos Tracker \n          </h1>\n        </div>\n        <form \n          id=\"search-repo\"\n          onSubmit={(e) => handleRepoSearch(e)}\n        >\n          <input \n            type=\"text\" \n            id=\"repo\"\n            placeholder=\"username/reponame\"\n            value={repoName}\n            onChange={(e) => setRepoName(e.target.value)}\n          />\n          <button type=\"submit\">\n            <FaPlus color=\"#fff\" size={30} />\n          </button>\n        </form>\n      </header>\n      <main>\n        {repos ? repos.map((repo: Repo) => (\n          <RepoItem key={repo.full_name} repo={repo} />\n        )) : (\n          <h1>No repos found :(</h1>\n        )}\n      </main>\n      <Footer />\n    </div>\n  )\n}\n\nexport default Landing;","import React from 'react';\nimport { MdErrorOutline } from 'react-icons/md'\n\nimport './styles.css';\n\nexport interface Issue {\n  id: number;\n  title: string;\n  repository_url: string;\n  labels: [\n    {\n      id: number;\n      name: string;\n      color: string;\n    }\n  ]\n}\n\ninterface IssueItemProps {\n  issue: Issue\n}\n\nconst IssueItem: React.FC<IssueItemProps> = ({ issue }) => {\n  return (\n    <a href={issue.repository_url} className=\"issue-item-link\" >\n      <article className=\"issue-item\">\n        <div className=\"issue-title\">\n          <MdErrorOutline size={18} />\n          <p>\n            {issue.title}\n          </p>\n        </div>\n        <div className=\"issue-label-container\">\n          {issue.labels.map(label => (\n            <div key={label.id} className=\"issue-label\" style={{ background: `#${label.color}` }}>\n              {label.name}\n            </div>\n          ))}\n        </div>\n      </article>\n    </a>\n  )\n}\n\nexport default IssueItem","import React, { useState, useEffect } from 'react';\nimport { FaArrowLeft, FaArrowRight } from 'react-icons/fa';\n\nimport './styles.css'\n\ninterface PaginationProps {\n  currentPage: number;\n  lastPage: number;\n  handlePageChange: (pageNumber: number) => void;\n}\n\nconst Pagination: React.FC<PaginationProps> = ({ currentPage, lastPage, handlePageChange }) => {\n  const [pages, setPages] = useState([currentPage])\n\n  useEffect(() => {\n    const pagesArray = [];\n\n    const minPage = currentPage - 2;\n    const maxPage = currentPage + 2;\n    \n    if(maxPage <= lastPage && minPage >= 1) {\n      for (let i = currentPage - 2; i <= maxPage; i++) {\n        pagesArray.push(i);\n      }\n    } else if(minPage < 1) {\n      for (let i = 1; i <= 5; i++) {\n        pagesArray.push(i);\n      }\n    } else if(maxPage > lastPage) {\n      for (let i = lastPage - 4; i <= lastPage; i++) {\n        pagesArray.push(i);\n      }\n    } else {\n      for (let i = 1; i <= maxPage; i++) {\n        pagesArray.push(i);\n      }\n    }\n\n    setPages(pagesArray);\n  }, [currentPage])\n\n  return (\n    <div className=\"pagination-container\">\n      <button className=\"arrow-left\" disabled={currentPage === 1} onClick={() => handlePageChange(currentPage - 1)}>\n        <div>\n          <FaArrowLeft size={12} />\n        </div>\n      </button>\n      { pages.map((pageNumber) => (\n        <button \n          key={pageNumber} \n          disabled={pageNumber === currentPage} \n          style={{\n            background: currentPage === pageNumber ? \"#26947e\" : \"#eee\",\n            color: currentPage === pageNumber ? \"#eee\" : \"#393E41\"\n          }}\n          onClick={() => handlePageChange(pageNumber)}\n        >\n          {pageNumber}\n        </button>\n      ))}\n      <button className=\"arrow-right\" disabled={currentPage === lastPage} onClick={() => handlePageChange(currentPage + 1)}>\n        <div>\n          <FaArrowRight size={12} />\n        </div>\n      </button>\n    </div>\n  )\n}\n\nexport default Pagination;","import React, { useState, useEffect, useContext } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { FaStar, FaArrowLeft } from 'react-icons/fa'\nimport { MdError } from 'react-icons/md'\n\nimport api from '../../services/api';\n\nimport { RepoContext } from '../../components/RepoProvider';\nimport { Repo } from '../../components/RepoItem';\n\nimport IssueItem, { Issue } from '../../components/IssueItem';\nimport Pagination from '../../components/Pagination';\nimport Footer from '../../components/Footer';\n\nimport './styles.css';\n\nconst RepoPage = () => {\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [page, setPage] = useState(1);\n  const [lastPage, setLastPage] = useState(0);\n  const [issues, setIssues] = useState([]);\n  const [pageRepo, setPageRepo] = useState<Repo>();\n  \n  const { repos } = useContext(RepoContext);\n  const { owner, name } = useParams();\n\n  useEffect(() => {\n    if(repos) {\n      const repo = repos.find((repoItem: Repo) => repoItem.name === name)\n\n      if(repo) {\n        setPageRepo(repo);\n        setLoading(false);\n\n        return;\n      }\n    }\n\n    api.get(`/repos/${owner}/${name}`)\n    .then(({ data }) => {\n      setPageRepo(data);\n    })\n    .catch(() => {\n      setError(true);\n    })\n\n    setLoading(false);\n  }, []);\n\n  useEffect(() => {\n    if(pageRepo) {\n      api.get(`/repos/${pageRepo.full_name}/issues?page=${page}&?sort=created&?state=open`)\n      .then((response) => {\n        if(lastPage === 0) {\n          const { link } = response.headers;\n\n          const lastPageLink = link.split(',').pop().split(';')[0];\n          const lastPageValue = lastPageLink.substr(lastPageLink.indexOf(\"=\", lastPageLink.indexOf('page') + 6));\n          const lastPageNumber = Number(lastPageValue.substring(1, lastPageValue.indexOf('>')));\n\n          setLastPage(lastPageNumber);\n        }\n\n        const { data } = response\n\n        setIssues(data);\n      })\n    }\n  }, [pageRepo, page])\n\n  function handlePageChange(pageNumber: number) {\n    setPage(pageNumber);\n  }\n\n  return (\n    <div id=\"page-repo\" className=\"container\">\n      <header>\n        <div className=\"repo-navigation\">\n          <Link to=\"/\">\n            <FaArrowLeft size={16} />\n          </Link>\n          <Link to=\"/\">\n            GitRepos Tracker\n          </Link>\n        </div>\n        { error ? (\n          <div className=\"repo-secondary-content\">\n            <h1>\n              We couldn't find <span>{`${owner}/${name}`}</span> repository :(\n            </h1>\n          </div>\n        ) : (\n          <>\n            {loading ? (\n              <div className=\"repo-secondary-content\">\n                <h1>\n                  Loading...\n                </h1>\n              </div>\n            ) : (\n              <>\n                <div className=\"repo-title\">\n                  <img src={pageRepo?.owner.avatar_url} alt={pageRepo?.full_name}/>\n                  <h1>\n                    {pageRepo?.full_name}\n                  </h1>\n                </div>\n                <p id=\"repo-description\">\n                  {pageRepo?.description}\n                </p>\n                <div className=\"repo-details\">\n                  <div className=\"repo-issues\">\n                    <MdError size={20} />\n                    <p>{pageRepo?.open_issues} issues</p>\n                  </div>\n                  <div className=\"repo-stars\">\n                    <FaStar size={20} color=\"#E94F37\" />\n                    <p>{pageRepo?.stargazers_count}</p>\n                  </div>\n                </div>\n              </>\n            )}\n          </>\n        )}\n      </header>\n      <main>\n        { issues.map((issue: Issue) => (\n          <IssueItem key={issue.id} issue={issue} />\n        )) }\n      </main>\n      {lastPage !== 0 && (\n        <Pagination currentPage={page} lastPage={lastPage} handlePageChange={handlePageChange} />\n      )}\n      <Footer />\n    </div>\n  )\n}\n\nexport default RepoPage;","import React from 'react';\nimport 'dotenv';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\n\nimport Landing from './pages/Landing';\nimport RepoPage from './pages/RepoPage';\n\nfunction Routes() {\n  return (\n    <BrowserRouter \n      basename=\"/gitrepos-tracker\"\n    >\n      <Switch>\n        <Route path=\"/\" exact component={Landing} />\n        <Route path=\"/repos/:owner/:name\" component={RepoPage} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default Routes;","import React from 'react';\n\nimport RepoProvider from './components/RepoProvider';\nimport Routes from './routes';\n\nimport './assets/styles/global.css';\n\nfunction App() {\n  return (\n    <RepoProvider>\n      <Routes/>\n    </RepoProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'dotenv/config';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}